{"ast":null,"code":"var _jsxFileName = \"/home/akash/Documents/DelphiApp1/frontend/src/components/exam/Social/QuizInstructions.js\";\nimport React, { Fragment, useState } from 'react';\n/*import NewWindow from 'react-new-window'*/\n\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport answer from '../../assets/img/answer.png';\nimport fiftyFifty from '../../assets/img/fiftyFifty.PNG';\nimport hints from '../../assets/img/hints.PNG';\nimport options from '../../assets/img/options.PNG';\n\nconst QuizInstructions = () => {\n  const [agree, setAgree] = useState(false);\n\n  const checkboxHandler = () => {\n    setAgree(!agree);\n  };\n\n  return (\n    /*   <NewWindow>*/\n    React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Helmet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Quiz Instructions\")), React.createElement(\"div\", {\n      className: \"instructions-wrap container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"How to do the quiz?\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Ensure you read this guide from start to finish.\"), React.createElement(\"ul\", {\n      id: \"main-list\",\n      className: \"browser-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"The quiz has a duration of 10 minutes and ends as soon as your time elapses.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Each quiz consist of 5 questions.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Every question contains 4 options\", React.createElement(\"img\", {\n      src: options,\n      alt: \"Quiz App - Options example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Select the option which best answers provided question by clicking (or selecting) it.\", React.createElement(\"img\", {\n      src: answer,\n      alt: \"Quiz App - Answer example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Each quiz has 2 lifelines namely:\", React.createElement(\"ul\", {\n      id: \"sublist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"50/50 chances\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"5 Hints\"))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Selecting a 50/50 lifeline by clicking the \\\" \", React.createElement(\"span\", {\n      className: \"mdi mdi-set-center mdi-24px lifeline-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), \" \\\" icon will remove 2 wrong answers, leaving one wrong and a correct one. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: fiftyFifty,\n      alt: \"Quiz App - 50/50 example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Using a hint by clicking the \\\" \", React.createElement(\"span\", {\n      className: \"mdi mdi-lightbulb-on mdi-24px lifeline-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), \" \\\" icon will remove one wrong answer, leaving two wrong answers and a correct one. You can use as many hints as possible on a single question.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: hints,\n      alt: \"Quiz App - Hints example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Feel free to quit from the quiz at any time.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"The timer starts as soon as the quiz loads.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Let's do this if you think you've got what it takes?\")), React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        backgroundColor: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"agree\",\n      onChange: checkboxHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"agree\",\n      style: {\n        color: \"#080600\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" Click on this text if you agree to \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"the given instructions and conditions\"))))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"No, take me back!\")), React.createElement(\"span\", {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: !agree,\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/exam/Social/quiz\",\n      style: {\n        color: '#080600'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Attempt Quiz Now\")))))))\n    /*   </NewWindow>*/\n\n  );\n};\n\nexport default QuizInstructions;","map":{"version":3,"sources":["/home/akash/Documents/DelphiApp1/frontend/src/components/exam/Social/QuizInstructions.js"],"names":["React","Fragment","useState","Link","Helmet","answer","fiftyFifty","hints","options","QuizInstructions","agree","setAgree","checkboxHandler","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { Fragment , useState} from 'react';\n/*import NewWindow from 'react-new-window'*/\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport answer from '../../assets/img/answer.png';\nimport fiftyFifty from '../../assets/img/fiftyFifty.PNG';\nimport hints from '../../assets/img/hints.PNG';\nimport options from '../../assets/img/options.PNG';\n\nconst QuizInstructions = () =>{ \n\tconst [agree, setAgree] = useState(false);\n\tconst checkboxHandler = () => \n\t{\n    \t\tsetAgree(!agree);\n  \t}\n    return (\n /*   <NewWindow>*/\n    <Fragment>\n        <Helmet>\n            <title>Quiz Instructions</title>\n        </Helmet>\n        <div className=\"instructions-wrap container\">\n            <h1>How to do the quiz?</h1>\n            <p>Ensure you read this guide from start to finish.</p>\n            <ul id=\"main-list\" className=\"browser-default\">\n                <li>The quiz has a duration of 10 minutes and ends as soon as your time elapses.</li>\n                <li>Each quiz consist of 5 questions.</li>\n                <li>\n                    Every question contains 4 options\n                    <img src={options} alt=\"Quiz App - Options example\" />\n                </li>\n                <li>\n                    Select the option which best answers provided question by clicking (or selecting) it.\n                    <img src={answer} alt=\"Quiz App - Answer example\" />\n                </li>\n                <li>\n                    Each quiz has 2 lifelines namely:\n                    <ul id=\"sublist\">\n                        <li>50/50 chances</li>\n                        <li>5 Hints</li>\n                    </ul>\n                </li>\n                <li>\n                    Selecting a 50/50 lifeline by clicking the \n                    \" <span className=\"mdi mdi-set-center mdi-24px lifeline-icon\"></span> \" \n                    icon will remove 2 wrong answers,\n                    leaving one wrong and a correct one. <br />\n                        <img src={fiftyFifty} alt=\"Quiz App - 50/50 example\" />\n                </li>\n                <li>\n                    Using a hint by clicking the\n                    \" <span className=\"mdi mdi-lightbulb-on mdi-24px lifeline-icon\"></span> \"\n                    icon will remove one wrong answer,\n                    leaving two wrong answers and a correct one.\n                    You can use as many hints as possible on a single question.<br />\n                    <img src={hints} alt=\"Quiz App - Hints example\" />\n                </li>\n                <li>\n                    Feel free to quit from the quiz at any time.\n                </li>\n                <li>\n                    The timer starts as soon as the quiz loads.\n                </li>\n                <li>\n                    Let's do this if you think you've got what it takes?\n                </li>\n            </ul>\n\t    <div style={{backgroundColor:\"white\"}}>\n\t        <div className=\"container\" style={{backgroundColor:\"white\"}}>\n            <div> \n\t                <input type=\"checkbox\" id=\"agree\" onChange={checkboxHandler}/>\n\t    \t\t<label htmlFor=\"agree\" style={{color:\"#080600\"}}><span><h5> Click on this text if you agree to <b>the given instructions and conditions</b></h5></span></label>\n      \t\t    </div>\n\t    \t</div>\n\t    </div> \n            <div>\n                <span className=\"left\">\n                    <Link to=\"/\">No, take me back!</Link>\n                </span>\n                <span className=\"right\">\n\t    \t\t<button disabled={!agree} className=\"btn\">\n                        \t<Link to=\"/exam/Social/quiz\" style={{ color: '#080600' }}>\n                        \t<b>\n                          \t       Attempt Quiz Now\n                        \t</b>\n                    \t\t</Link>\n                \t</button>\n                </span>\n            </div>\n        </div>\n    </Fragment>\n /*   </NewWindow>*/\n);\n};\n\nexport default QuizInstructions;"]},"metadata":{},"sourceType":"module"}