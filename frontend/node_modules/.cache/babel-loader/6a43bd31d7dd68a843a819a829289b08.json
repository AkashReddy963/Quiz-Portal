{"ast":null,"code":"var _jsxFileName = \"/home/akash/Documents/DelphiApp1/frontend/src/components/exam/Physics/Quiz.js\";\nimport React, { Component, Fragment } from 'react';\nimport Helmet from 'react-helmet';\nimport M from 'materialize-css';\nimport classnames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport one from '../../assets/img/Physics/q1.jpg';\nimport two from '../../assets/img/Physics/q2.jpg';\nimport three from '../../assets/img/Physics/q3.jpg';\nimport four from '../../assets/img/Physics/q4.jpg';\nimport five from '../../assets/img/Physics/q5.jpg';\nimport questions from '../../Questions/Physics.json';\nimport isEmpty from '../../utils/is-empty';\nimport correctNotification from '../../assets/sound/correct-answer.mp3';\nimport wrongNotification from '../../assets/sound/wrong-answer.mp3';\nimport buttonNotification from '../../assets/sound/button-sound.mp3';\nconst images = {\n  \"1\": one,\n  \"2\": two,\n  \"3\": three,\n  \"4\": four,\n  \"5\": five\n};\nexport class Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayQuestions = (questions = this.state.questions, currentQuestion, nextQuestion, previousQuestion) => {\n      let {\n        currentQuestionIndex\n      } = this.state;\n\n      if (!isEmpty(this.state.questions)) {\n        questions = this.state.questions;\n        currentQuestion = questions[currentQuestionIndex];\n        nextQuestion = questions[currentQuestionIndex + 1];\n        previousQuestion = questions[currentQuestionIndex - 1];\n        const answer = currentQuestion.answer;\n        this.setState({\n          currentQuestion: currentQuestion,\n          nextQuestion,\n          previousQuestion,\n          numberOfQuestions: questions.length,\n          answer,\n          previousRandomNumbers: []\n        }, () => {\n          this.showOptions();\n          this.handleDisableButton();\n        });\n      }\n    };\n\n    this.handleOptionClick = event => {\n      event.target.color = \"green\";\n\n      if (event.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n        setTimeout(() => {\n          this.correctSound.current.play();\n        }, 500);\n        this.correctAnswer();\n      } else {\n        setTimeout(() => {\n          this.wrongSound.current.play();\n        }, 500);\n        this.wrongAnswer();\n      }\n    };\n\n    this.handleNextButtonClick = () => {\n      this.playButtonSound();\n\n      if (this.state.nextQuestion !== undefined) {\n        this.setState(prevState => ({\n          currentQuestionIndex: prevState.currentQuestionIndex + 1\n        }), () => {\n          this.displayQuestions(this.state.question, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        });\n      }\n    };\n\n    this.handleQButtonClick = i => {\n      this.playButtonSound();\n\n      if (this.state.nextQuestion + 1 !== undefined) {\n        this.setState(prevState => ({\n          currentQuestionIndex: i\n        }), () => {\n          this.displayQuestions(this.state.question, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        });\n      }\n    };\n\n    this.handlePreviousButtonClick = () => {\n      this.playButtonSound();\n\n      if (this.state.previousQuestion !== undefined) {\n        this.setState(prevState => ({\n          currentQuestionIndex: prevState.currentQuestionIndex - 1\n        }), () => {\n          this.displayQuestions(this.state.question, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        });\n      }\n    };\n\n    this.handleQuitButtonClick = () => {\n      this.playButtonSound();\n\n      if (window.confirm('Are you sure you want to quit?')) {\n        this.props.history.push('/Examlist');\n      }\n    };\n\n    this.handleButtonClick = event => {\n      switch (event.target.id) {\n        case 'next-button':\n          this.handleNextButtonClick();\n          break;\n\n        case 'previous-button':\n          this.handlePreviousButtonClick();\n          break;\n\n        case 'q1':\n          this.handleQButtonClick(0);\n          break;\n\n        case 'q2':\n          this.handleQButtonClick(1);\n          break;\n\n        case 'q3':\n          this.handleQButtonClick(2);\n          break;\n\n        case 'q4':\n          this.handleQButtonClick(3);\n          break;\n\n        case 'q5':\n          this.handleQButtonClick(4);\n          break;\n\n        case 'first':\n          this.handleQButtonClick(0);\n          break;\n\n        case 'last':\n          this.handleQButtonClick(4);\n          break;\n\n        case 'quit-button':\n          this.handleQuitButtonClick();\n          break;\n\n        case 'submit':\n          this.endGame();\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.playButtonSound = () => {\n      this.buttonSound.current.play();\n    };\n\n    this.correctAnswer = () => {\n      M.toast({\n        html: 'Correct Answer',\n        classes: 'toast-valid',\n        displayLength: 1500\n      });\n      this.setState(prevState => ({\n        score: prevState.score + 1,\n        correctAnswers: prevState.correctAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n      }), () => {\n        if (this.state.nextQuestion === undefined) {\n          this.handleQButtonClick(4);\n        } else {\n          this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        }\n      });\n    };\n\n    this.wrongAnswer = () => {\n      navigator.vibrate(1000);\n      M.toast({\n        html: 'Wrong Answer',\n        classes: 'toast-invalid',\n        displayLength: 1500\n      });\n      this.setState(prevState => ({\n        wrongAnswers: prevState.wrongAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n      }), () => {\n        if (this.state.nextQuestion === undefined) {\n          this.handleQButtonClick(4);\n        } else {\n          this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        }\n      });\n    };\n\n    this.showOptions = () => {\n      const options = Array.from(document.querySelectorAll('.option'));\n      options.forEach(option => {\n        option.style.visibility = 'visible';\n      });\n      this.setState({\n        usedFiftyFifty: false\n      });\n    };\n\n    this.handleHints = () => {\n      if (this.state.hints > 0) {\n        const options = Array.from(document.querySelectorAll('.option'));\n        let indexOfAnswer;\n        options.forEach((option, index) => {\n          if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n            indexOfAnswer = index;\n          }\n        });\n\n        while (true) {\n          const randomNumber = Math.round(Math.random() * 3);\n\n          if (randomNumber !== indexOfAnswer && !this.state.previousRandomNumbers.includes(randomNumber)) {\n            options.forEach((option, index) => {\n              if (index === randomNumber) {\n                option.style.visibility = 'hidden';\n                this.setState(prevState => ({\n                  hints: prevState.hints - 1,\n                  previousRandomNumbers: prevState.previousRandomNumbers.concat(randomNumber)\n                }));\n              }\n            });\n            break;\n          }\n\n          if (this.state.previousRandomNumbers.length >= 3) break;\n        }\n      } else if (this.state.hints === 0) {\n        M.toast({\n          html: \"You don't have any hints left.\",\n          classes: 'toast-hint',\n          displayLength: 1500\n        });\n      }\n    };\n\n    this.handleFiftyFifty = () => {\n      if (this.state.fiftyFifty > 0 && this.state.usedFiftyFifty === false) {\n        const options = document.querySelectorAll('.option');\n        const randomNumbers = [];\n        let indexOfAnswer;\n        options.forEach((option, index) => {\n          if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n            indexOfAnswer = index;\n          }\n        });\n        let count = 0;\n\n        do {\n          const randomNumber = Math.round(Math.random() * 3);\n\n          if (randomNumber !== indexOfAnswer) {\n            if (randomNumbers.length < 2 && !randomNumbers.includes(randomNumber) && !randomNumbers.includes(indexOfAnswer)) {\n              randomNumbers.push(randomNumber);\n              count++;\n            } else {\n              while (true) {\n                const newRandomNumber = Math.round(Math.random() * 3);\n\n                if (!randomNumbers.includes(newRandomNumber) && !randomNumbers.includes(indexOfAnswer)) {\n                  randomNumbers.push(newRandomNumber);\n                  count++;\n                  break;\n                }\n              }\n            }\n          }\n        } while (count < 2);\n\n        options.forEach((option, index) => {\n          if (randomNumbers.includes(index)) {\n            option.style.visibility = 'hidden';\n          }\n        });\n        this.setState(prevState => ({\n          fiftyFifty: prevState.fiftyFifty - 1,\n          usedFiftyFifty: true\n        }));\n      } else if (this.state.fiftyFifty === 0) {\n        M.toast({\n          html: \"You don't have more 50/50s left.\",\n          classes: 'fiftyFifty-toast',\n          displayLength: 1500\n        });\n      }\n    };\n\n    this.startTimer = () => {\n      const countdownTime = Date.now() + 600000;\n      this.interval = setInterval(() => {\n        const now = new Date();\n        const distance = countdownTime - now;\n        const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        const seconds = Math.floor(distance % (1000 * 60) / 1000);\n\n        if (distance < 0) {\n          clearInterval(this.interval);\n          this.setState({\n            time: {\n              minutes: 0,\n              seconds: 0\n            }\n          }, () => {\n            this.endGame();\n          });\n        } else {\n          this.setState({\n            time: {\n              minutes,\n              seconds\n            }\n          });\n        }\n      }, 1000);\n    };\n\n    this.handleDisableButton = () => {\n      if (this.state.previousQuestion === undefined || this.state.currentQuestionIndex === 0) {\n        this.setState({\n          previousButtonDisabled: true\n        });\n      } else {\n        this.setState({\n          previousButtonDisabled: false\n        });\n      }\n\n      if (this.state.nextQuestion === undefined || this.state.currentQuestionIndex + 1 === this.state.numberOfQuestions) {\n        this.setState({\n          nextButtonDisabled: true\n        });\n      } else {\n        this.setState({\n          nextButtonDisabled: false\n        });\n      }\n    };\n\n    this.endGame = () => {\n      /*   alert(\"Game has ended.\");*/\n      const {\n        state\n      } = this;\n      const playerStats = {\n        score: state.score,\n        numberOfQuestions: state.numberOfQuestions,\n        numberOfAnsweredQuestions: state.correctAnswers + state.wrongAnswers,\n        numberOfUnansweredQuestions: 5 - state.correctAnswers - state.wrongAnswers,\n        correctAnswers: state.correctAnswers,\n        wrongAnswers: 5 - state.correctAnswers,\n        fiftyFiftyUsed: 2 - state.fiftyFifty,\n        hintsUsed: 5 - state.hints\n      };\n      console.log(playerStats);\n      setTimeout(() => {\n        this.props.history.push('/exam/Physics/QuizSummary', playerStats);\n      }, 1000);\n    };\n\n    this.state = {\n      questions,\n      currentQuestion: {},\n      nextQuestion: {},\n      previousQuestion: {},\n      answer: '',\n      numberOfQuestions: 0,\n      numberOfAnsweredQuestions: 0,\n      numberOfUnansweredQuestions: 0,\n      currentQuestionIndex: 0,\n      score: 0,\n      correctAnswers: 0,\n      wrongAnswers: 0,\n      hints: 5,\n      fiftyFifty: 2,\n      usedFiftyFifty: false,\n      nextButtonDisabled: false,\n      previousButtonDisabled: true,\n      previousRandomNumbers: [],\n      time: {}\n    };\n    this.interval = null;\n    this.correctSound = React.createRef();\n    this.wrongSound = React.createRef();\n    this.buttonSound = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      questions,\n      currentQuestion,\n      nextQuestion,\n      previousQuestion\n    } = this.state;\n    this.displayQuestions(questions, currentQuestion, nextQuestion, previousQuestion);\n    this.startTimer();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const {\n      currentQuestion,\n      currentQuestionIndex,\n      numberOfQuestions,\n      hints,\n      fiftyFifty,\n      time\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, React.createElement(Helmet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, \"Quiz - Quiz App\")), React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(\"audio\", {\n      ref: this.correctSound,\n      src: correctNotification,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }), React.createElement(\"audio\", {\n      ref: this.wrongSound,\n      src: wrongNotification,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }), React.createElement(\"audio\", {\n      ref: this.buttonSound,\n      src: buttonNotification,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"questions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, \"Quiz Mode\"), React.createElement(\"div\", {\n      className: \"lifeline-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.handleFiftyFifty,\n      className: \"mdi mdi-set-center mdi-24px lifeline-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"lifeline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, fiftyFifty))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.handleHints,\n      className: \"mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"lifeline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, hints)))), React.createElement(\"div\", {\n      className: \"timer-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"left\",\n      style: {\n        float: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, currentQuestionIndex + 1, \" of \", numberOfQuestions), React.createElement(\"span\", {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, time.minutes, \":\", time.seconds, React.createElement(\"span\", {\n      className: \"mdi mdi-clock-outline mdi-24px lifeline-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    })))), React.createElement(\"h5\", {\n      style: {\n        WebkitUserSelect: \"none\",\n        WebkitTouchCallout: \"none\",\n        MozUserSelect: \"none\",\n        MsUserSelect: \"none\",\n        UserSelect: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, currentQuestion.question), React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, \" \", React.createElement(\"img\", {\n      style: {\n        WebkitUserSelect: \"none\",\n        WebkitTouchCallout: \"none\",\n        MozUserSelect: \"none\",\n        MsUserSelect: \"none\",\n        UserSelect: \"none\",\n        width: \"20%\",\n        height: \"10%\"\n      },\n      src: images[currentQuestionIndex + 1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"options-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleOptionClick,\n      id: \"Button\",\n      className: \"option\",\n      style: {\n        WebkitUserSelect: \"none\",\n        WebkitTouchCallout: \"none\",\n        MozUserSelect: \"none\",\n        MsUserSelect: \"none\",\n        UserSelect: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, currentQuestion.optionA), React.createElement(\"button\", {\n      onClick: this.handleOptionClick,\n      id: \"Button\",\n      className: \"option\",\n      style: {\n        WebkitUserSelect: \"none\",\n        WebkitTouchCallout: \"none\",\n        MozUserSelect: \"none\",\n        MsUserSelect: \"none\",\n        UserSelect: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, currentQuestion.optionB)), React.createElement(\"div\", {\n      className: \"options-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleOptionClick,\n      id: \"Button\",\n      className: \"option\",\n      style: {\n        WebkitUserSelect: \"none\",\n        WebkitTouchCallout: \"none\",\n        MozUserSelect: \"none\",\n        MsUserSelect: \"none\",\n        UserSelect: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, currentQuestion.optionC), React.createElement(\"button\", {\n      onClick: this.handleOptionClick,\n      id: \"Button\",\n      className: \"option\",\n      style: {\n        WebkitUserSelect: \"none\",\n        WebkitTouchCallout: \"none\",\n        MozUserSelect: \"none\",\n        MsUserSelect: \"none\",\n        UserSelect: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, currentQuestion.optionD)), React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"first\",\n      onClick: this.handleButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, \"First\"), React.createElement(\"button\", {\n      className: classnames('', {\n        'disabled': this.state.previousButtonDisabled\n      }),\n      id: \"previous-button\",\n      onClick: this.handleButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, \"Previous\"), React.createElement(\"button\", {\n      className: classnames('', {\n        'disabled': this.state.nextButtonDisabled\n      }),\n      id: \"next-button\",\n      onClick: this.handleButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, \"Next\"), React.createElement(\"button\", {\n      id: \"last\",\n      style: {\n        backgroundColor: \"#118000\"\n      },\n      onClick: this.handleButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"Last\"), React.createElement(\"button\", {\n      id: \"quit-button\",\n      style: {\n        backgroundColor: \"brown\"\n      },\n      onClick: this.handleButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, \"Quit\"), React.createElement(\"button\", {\n      id: \"submit\",\n      style: {\n        backgroundColor: \"grey\"\n      },\n      onClick: this.handleButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, \"Submit\")))), React.createElement(\"div\", {\n      className: \"questions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, \" Quiz Navigation\"), \" \"), React.createElement(\"button\", {\n      className: \"btn\",\n      id: \"q1\",\n      onClick: this.handleButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, \"Q1\"), \"\\xA0\\xA0\\xA0\\xA0\", React.createElement(\"button\", {\n      className: \"btn\",\n      id: \"q2\",\n      onClick: this.handleButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }, \"Q2\"), \"\\xA0\\xA0\\xA0\\xA0\", React.createElement(\"button\", {\n      className: \"btn\",\n      id: \"q3\",\n      onClick: this.handleButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, \"Q3\"), \"\\xA0\\xA0\\xA0\\xA0\", React.createElement(\"button\", {\n      className: \"btn\",\n      id: \"q4\",\n      onClick: this.handleButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, \"Q4\"), \"\\xA0\\xA0\\xA0\\xA0\", React.createElement(\"button\", {\n      className: \"btn\",\n      id: \"q5\",\n      onClick: this.handleButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, \"Q5\")));\n  }\n\n}\nexport default Quiz;","map":{"version":3,"sources":["/home/akash/Documents/DelphiApp1/frontend/src/components/exam/Physics/Quiz.js"],"names":["React","Component","Fragment","Helmet","M","classnames","Link","one","two","three","four","five","questions","isEmpty","correctNotification","wrongNotification","buttonNotification","images","Quiz","constructor","props","displayQuestions","state","currentQuestion","nextQuestion","previousQuestion","currentQuestionIndex","answer","setState","numberOfQuestions","length","previousRandomNumbers","showOptions","handleDisableButton","handleOptionClick","event","target","color","innerHTML","toLowerCase","setTimeout","correctSound","current","play","correctAnswer","wrongSound","wrongAnswer","handleNextButtonClick","playButtonSound","undefined","prevState","question","handleQButtonClick","i","handlePreviousButtonClick","handleQuitButtonClick","window","confirm","history","push","handleButtonClick","id","endGame","buttonSound","toast","html","classes","displayLength","score","correctAnswers","numberOfAnsweredQuestions","navigator","vibrate","wrongAnswers","options","Array","from","document","querySelectorAll","forEach","option","style","visibility","usedFiftyFifty","handleHints","hints","indexOfAnswer","index","randomNumber","Math","round","random","includes","concat","handleFiftyFifty","fiftyFifty","randomNumbers","count","newRandomNumber","startTimer","countdownTime","Date","now","interval","setInterval","distance","minutes","floor","seconds","clearInterval","time","previousButtonDisabled","nextButtonDisabled","playerStats","numberOfUnansweredQuestions","fiftyFiftyUsed","hintsUsed","console","log","createRef","componentDidMount","componentWillUnmount","render","float","WebkitUserSelect","WebkitTouchCallout","MozUserSelect","MsUserSelect","UserSelect","textAlign","width","height","optionA","optionB","optionC","optionD","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport Helmet from 'react-helmet';\nimport M from 'materialize-css';\nimport classnames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport one from '../../assets/img/Physics/q1.jpg';\nimport two from '../../assets/img/Physics/q2.jpg';\nimport three from '../../assets/img/Physics/q3.jpg';\nimport four from '../../assets/img/Physics/q4.jpg';\nimport five from '../../assets/img/Physics/q5.jpg';\n\n\nimport questions from '../../Questions/Physics.json';\nimport isEmpty from '../../utils/is-empty';\nimport correctNotification from '../../assets/sound/correct-answer.mp3';\nimport wrongNotification from '../../assets/sound/wrong-answer.mp3';\nimport buttonNotification from '../../assets/sound/button-sound.mp3';\nconst images={\"1\":one,\"2\":two,\"3\":three,\"4\":four,\"5\":five}\n\nexport class Quiz extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            questions,\n            currentQuestion: {},\n            nextQuestion: {},\n            previousQuestion: {},\n            answer: '',\n            numberOfQuestions: 0,\n            numberOfAnsweredQuestions: 0,\n            numberOfUnansweredQuestions: 0,\n            currentQuestionIndex: 0,\n            score: 0,\n            correctAnswers: 0,\n            wrongAnswers: 0,\n            hints: 5,\n            fiftyFifty: 2,\n            usedFiftyFifty: false,\n            nextButtonDisabled: false,\n            previousButtonDisabled: true,\n            previousRandomNumbers: [],\n            time: {}\n        };\n        this.interval = null;\n        this.correctSound = React.createRef();\n        this.wrongSound = React.createRef();\n        this.buttonSound = React.createRef();\n    };\n\n    componentDidMount() {\n        const { questions, currentQuestion, nextQuestion, previousQuestion } = this.state;\n        this.displayQuestions(questions, currentQuestion, nextQuestion, previousQuestion);\n        this.startTimer();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    displayQuestions = (questions = this.state.questions, currentQuestion, nextQuestion, previousQuestion) => {\n        let { currentQuestionIndex } = this.state;\n        if(!isEmpty(this.state.questions)) {\n            questions = this.state.questions;\n            currentQuestion = questions[currentQuestionIndex];\n            nextQuestion = questions[currentQuestionIndex + 1];\n            previousQuestion = questions[currentQuestionIndex - 1];\n            const answer = currentQuestion.answer;\n            this.setState({\n                currentQuestion: currentQuestion,\n                nextQuestion,\n                previousQuestion,\n                numberOfQuestions: questions.length,\n                answer,\n                previousRandomNumbers: []\n             }, () => {\n                 this.showOptions();\n                 this.handleDisableButton();\n             });\n        }\n    };\n\n    handleOptionClick = (event) => {\n    event.target.color =\"green\";\n        if(event.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) \n        {\n            setTimeout(() => {\n                this.correctSound.current.play();\n            }, 500);\n            this.correctAnswer();\n        }\n        else {\n            setTimeout(() =>{\n                this.wrongSound.current.play();\n            }, 500)\n            this.wrongAnswer();\n        }\n    };\n\n    handleNextButtonClick = () => {\n        this.playButtonSound();\n        if(this.state.nextQuestion !== undefined) {\n            this.setState(prevState => ({\n                currentQuestionIndex: prevState.currentQuestionIndex + 1 \n            }), () => {\n                this.displayQuestions(this.state.question, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n            });\n        }\n    };\n\n     handleQButtonClick = (i) => {\n        this.playButtonSound();\n        if(this.state.nextQuestion+1 !== undefined) {\n            this.setState(prevState => ({\n\t\t    currentQuestionIndex: i\n            }), () => {\n                this.displayQuestions(this.state.question, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n            });\n        }\n   };\n\n    handlePreviousButtonClick = () => {\n        this.playButtonSound();\n        if(this.state.previousQuestion !== undefined) {\n            this.setState(prevState => ({\n                currentQuestionIndex: prevState.currentQuestionIndex - 1 \n            }), () => {\n                this.displayQuestions(this.state.question, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n            });\n        }\n    };\n\n    handleQuitButtonClick = () => {\n        this.playButtonSound();\n        if(window.confirm('Are you sure you want to quit?')) {\n            this.props.history.push('/Examlist');\n        }\n    }\n\n\n    handleButtonClick = (event) => {\n        switch(event.target.id) {\n            \n            case 'next-button':\n                  this.handleNextButtonClick();\n                  break;\n\n            case 'previous-button':\n                  this.handlePreviousButtonClick();\n                  break;\n\n            case 'q1': this.handleQButtonClick(0); break;\n            case 'q2': this.handleQButtonClick(1); break;\n            case 'q3': this.handleQButtonClick(2); break;\n            case 'q4': this.handleQButtonClick(3); break;\n            case 'q5': this.handleQButtonClick(4); break;\n            \n            case 'first' : this.handleQButtonClick(0); break;\n            case 'last' : this.handleQButtonClick(4); break;\n            case 'quit-button':\n                  this.handleQuitButtonClick();\n                  break;\n            case 'submit':\n            this.endGame();\n            break;\n            default:\n                break;\n        }\n    }\n\n    playButtonSound = () => {\n        this.buttonSound.current.play();\n    }\n\n    correctAnswer = () => {\n        M.toast({ \n            html: 'Correct Answer',\n            classes: 'toast-valid',\n            displayLength: 1500\n        });\n        this.setState(prevState => ({\n            score: prevState.score + 1,\n            correctAnswers: prevState.correctAnswers + 1,\n            currentQuestionIndex: prevState.currentQuestionIndex + 1,\n            numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n        }), () => {\n            if(this.state.nextQuestion === undefined) {\n                this.handleQButtonClick(4);\n            }\n            else {\n                this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n            }\n        });\n    };\n\n    wrongAnswer = () => {\n        navigator.vibrate(1000);\n        M.toast({\n            html: 'Wrong Answer',\n            classes: 'toast-invalid',\n            displayLength: 1500\n        });\n        this.setState(prevState => ({\n            wrongAnswers: prevState.wrongAnswers + 1,\n            currentQuestionIndex: prevState.currentQuestionIndex + 1,\n            numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n        }), () => {\n            if(this.state.nextQuestion === undefined) {\n                this.handleQButtonClick(4);\n            } \n            else {\n                this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n            }\n        });\n    };\n\n    showOptions = () => {\n        const options = Array.from(document.querySelectorAll('.option'));\n\n        options.forEach((option) => {\n            option.style.visibility = 'visible';\n        });\n\n        this.setState({\n            usedFiftyFifty: false\n        });\n\n    }\n\n    handleHints = () => {\n        if(this.state.hints > 0) {\n            const options = Array.from(document.querySelectorAll('.option'));\n            let indexOfAnswer;\n    \n            options.forEach((option, index) => {\n                if(option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n                    indexOfAnswer = index;\n                }\n            });\n            while(true) {\n                const randomNumber = Math.round(Math.random() * 3);\n                if(randomNumber !== indexOfAnswer && !this.state.previousRandomNumbers.includes(randomNumber)) {\n                    options.forEach((option, index) => {\n                        if(index === randomNumber) {\n                            option.style.visibility = 'hidden';\n                            this.setState((prevState) => ({\n                                hints: prevState.hints - 1,\n                                previousRandomNumbers: prevState.previousRandomNumbers.concat(randomNumber)\n                            }));\n                        }\n                    });\n                    break;\n                }\n                if(this.state.previousRandomNumbers.length >= 3) break;\n            }\n        }\n        else if(this.state.hints === 0) {\n            M.toast({\n                html: \"You don't have any hints left.\",\n                classes: 'toast-hint',\n                displayLength: 1500\n            });\n        }\n    };\n\n    handleFiftyFifty = () => {\n        if(this.state.fiftyFifty > 0 && this.state.usedFiftyFifty === false) {\n            const options = document.querySelectorAll('.option');\n            const randomNumbers = [];\n            let indexOfAnswer;\n\n            options.forEach((option, index) => {\n                if(option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n                    indexOfAnswer = index;\n                }\n            });\n            let count = 0;\n            do {\n                const randomNumber = Math.round(Math.random() * 3);\n                if(randomNumber !== indexOfAnswer) {\n                    if(randomNumbers.length < 2 && !randomNumbers.includes(randomNumber) && !randomNumbers.includes(indexOfAnswer)) {\n                        randomNumbers.push(randomNumber);\n                        count ++;\n                    }\n                    else {\n                        while(true) {\n                            const newRandomNumber = Math.round(Math.random() * 3);\n                            if(!randomNumbers.includes(newRandomNumber) && !randomNumbers.includes(indexOfAnswer)) {\n                                randomNumbers.push(newRandomNumber);\n                                count++;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            while(count < 2);\n            options.forEach((option, index) => {\n                if(randomNumbers.includes(index)) {\n                    option.style.visibility = 'hidden';\n                }\n            });\n            this.setState(prevState => ({\n                fiftyFifty: prevState.fiftyFifty - 1,\n                usedFiftyFifty: true\n            }));\n        }\n        else if(this.state.fiftyFifty === 0) {\n            M.toast({\n                html: \"You don't have more 50/50s left.\",\n                classes: 'fiftyFifty-toast',\n                displayLength: 1500\n            });\n        }\n    };\n\n    startTimer = () => {\n        const countdownTime = Date.now() + 600000;\n        this.interval = setInterval(() => {\n            const now = new Date();\n            const distance = countdownTime - now;\n            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            const seconds = Math.floor((distance % (1000 * 60)) / (1000));\n            if(distance < 0) {\n                clearInterval(this.interval);\n                this.setState({\n                    time: {\n                        minutes: 0,\n                        seconds: 0\n                    }\n                }, () => {\n                    this.endGame();\n                });\n            }\n            else {\n                this.setState({\n                    time: {\n                        minutes,\n                        seconds\n                    }\n                });\n            }\n        }, 1000);\n    };\n\n    handleDisableButton = () => {\n        if(this.state.previousQuestion === undefined || this.state.currentQuestionIndex === 0) {\n            this.setState({\n                previousButtonDisabled: true\n            });\n        }\n        else {\n            this.setState({\n                previousButtonDisabled: false\n            });\n        }\n\n        if(this.state.nextQuestion === undefined || this.state.currentQuestionIndex + 1 === this.state.numberOfQuestions) {\n            this.setState({\n                nextButtonDisabled: true\n            });\n        }\n        else {\n            this.setState({\n                nextButtonDisabled: false\n            });\n        }\n    };\n\n    endGame = () => {\n     /*   alert(\"Game has ended.\");*/\n        const { state } = this;\n        const playerStats = {\n            score: state.score,\n            numberOfQuestions: state.numberOfQuestions,\n            numberOfAnsweredQuestions: state.correctAnswers + state.wrongAnswers,\n            numberOfUnansweredQuestions: 5 - state.correctAnswers - state.wrongAnswers,\n            correctAnswers: state.correctAnswers,\n            wrongAnswers: 5 - state.correctAnswers,\n            fiftyFiftyUsed: 2 - state.fiftyFifty,\n            hintsUsed: 5- state.hints\n        };\n        console.log(playerStats);\n        setTimeout(() => {\n            this.props.history.push('/exam/Physics/QuizSummary', playerStats);\n        }, 1000);\n    };\n    render() {\n\n        const { \n            currentQuestion,\n            currentQuestionIndex, \n            numberOfQuestions, \n            hints, \n            fiftyFifty, \n            time \n        } = this.state;\n        return (\n            <div>\n                <Fragment>\n                    <Helmet>\n                        <title>\n                            Quiz - Quiz App\n                        </title>\n                    </Helmet>\n                    <Fragment>\n                        <audio ref={this.correctSound} src={correctNotification}></audio>\n                        <audio ref={this.wrongSound} src={wrongNotification}></audio>\n                        <audio ref={this.buttonSound} src={buttonNotification}></audio>\n                    </Fragment>\n                    <div className=\"questions\">\n                        <h2>Quiz Mode</h2>\n                        <div className=\"lifeline-container\">\n                            <p>\n                                <span onClick={this.handleFiftyFifty} className=\"mdi mdi-set-center mdi-24px lifeline-icon\">\n                                    <span className=\"lifeline\">{fiftyFifty}</span>\n                                </span>\n                            </p>\n                            <p>\n                                <span onClick={this.handleHints} className=\"mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\">\n              \t\t\t<span className=\"lifeline\">{hints}</span>\n                                </span>\n                            </p>\n                        </div>\n                        <div className=\"timer-container\">\n                            <p>\n                                <span className=\"left\" style={{ float: 'left' }}>{currentQuestionIndex + 1} of {numberOfQuestions}</span>\n                                <span className=\"right\">{time.minutes}:{time.seconds}<span className=\"mdi mdi-clock-outline mdi-24px lifeline-icon\"></span></span>\n                            </p>\n                        </div>\n                        <h5 style={{WebkitUserSelect:\"none\",WebkitTouchCallout:\"none\",MozUserSelect:\"none\",MsUserSelect:\"none\",UserSelect:\"none\"}}>{currentQuestion.question}</h5>\n\t\t\t<div style={{textAlign:\"center\"}}> <img style={{WebkitUserSelect:\"none\",WebkitTouchCallout:\"none\",MozUserSelect:\"none\",MsUserSelect:\"none\",UserSelect:\"none\",width:\"20%\",height:\"10%\"}} src={images[currentQuestionIndex+1]}/></div>\n                        <div className=\"options-container\">\n                            <button onClick={this.handleOptionClick} id=\"Button\" className=\"option\" style={{WebkitUserSelect:\"none\",WebkitTouchCallout:\"none\",MozUserSelect:\"none\",MsUserSelect:\"none\",UserSelect:\"none\"}}>{currentQuestion.optionA}</button>\n                            <button onClick={this.handleOptionClick} id=\"Button\" className=\"option\" style={{WebkitUserSelect:\"none\",WebkitTouchCallout:\"none\",MozUserSelect:\"none\",MsUserSelect:\"none\",UserSelect:\"none\"}}>{currentQuestion.optionB}</button>\n                        </div>\n                        <div className=\"options-container\">\n                            <button onClick={this.handleOptionClick} id=\"Button\" className=\"option\" style={{WebkitUserSelect:\"none\",WebkitTouchCallout:\"none\",MozUserSelect:\"none\",MsUserSelect:\"none\",UserSelect:\"none\"}}>{currentQuestion.optionC}</button>\n                            <button onClick={this.handleOptionClick} id=\"Button\" className=\"option\" style={{WebkitUserSelect:\"none\",WebkitTouchCallout:\"none\",MozUserSelect:\"none\",MsUserSelect:\"none\",UserSelect:\"none\"}}>{currentQuestion.optionD}</button>\n                        </div>\n                        <div className=\"button-container\">\n\t\t\t    <button id=\"first\" onClick={this.handleButtonClick}>\n                                     First\n                             </button>\n                            <button\n                                className={classnames('', {'disabled': this.state.previousButtonDisabled})} \n                                id=\"previous-button\" \n                                onClick={this.handleButtonClick}>\n                                    Previous\n                            </button>\n                            <button\n                                className={classnames('', {'disabled': this.state.nextButtonDisabled})} \n                                id=\"next-button\" \n                                onClick={this.handleButtonClick}>\n                                    Next\n                            </button>\n\t\t\t    <button\n                                 id=\"last\"\n\t\t\t\t  style={{backgroundColor:\"#118000\"}}\n                                 onClick={this.handleButtonClick}>\n                                    Last\n                             </button>\n                            <button \n                                id=\"quit-button\" \n\t\t\t\tstyle={{backgroundColor:\"brown\"}}\n                                onClick={this.handleButtonClick}>\n                                    Quit\n                            </button>\n\t\t\t    <button\n                                 id=\"submit\"\n                                 style={{backgroundColor:\"grey\"}}\n                                 onClick={this.handleButtonClick}>\n                                    Submit\n                             </button>\n                        </div>\n                    </div>\n                </Fragment>\n\t\t<div className=\"questions\">\n\t\t\t<h5><b> Quiz Navigation</b> </h5>\n\t\t\t<button className=\"btn\"  id=\"q1\"\n                                onClick={this.handleButtonClick}>\n                                Q1\n                        </button>\n\t\t        &nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t<button className=\"btn\"  id=\"q2\"\n                                onClick={this.handleButtonClick}>\n                                Q2\n                        </button>\n\t\t        &nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t<button className=\"btn\" id=\"q3\"\n                                onClick={this.handleButtonClick}>\n                                       Q3\n                        </button>\n\t\t        &nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t<button className=\"btn\"  id=\"q4\"\n                                onClick={this.handleButtonClick}>\n                                       Q4\n                        </button>\n\t\t        &nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t<button className=\"btn\"  id=\"q5\"\n                                onClick={this.handleButtonClick}>\n                                       Q5\n                        </button>\n\t\t</div>\n            </div>\n        )\n    }\n}\n\nexport default Quiz\n"]},"metadata":{},"sourceType":"module"}